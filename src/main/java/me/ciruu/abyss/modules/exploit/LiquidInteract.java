package me.ciruu.abyss.modules.exploit;

import java.util.function.Predicate;
import me.ciruu.abyss.Globals;
import me.ciruu.abyss.enums.Class11;
import me.ciruu.abyss.events.network.EventNetworkPostPacketEvent;
import me.ciruu.abyss.modules.Module;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.init.Blocks;
import net.minecraft.network.play.client.CPacketPlayerTryUseItemOnBlock;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.BlockPos;

public class LiquidInteract
extends Module {
    @EventHandler
    private Listener Field3247 = new Listener<EventNetworkPostPacketEvent>(this::Method3925, 50, new Predicate[0]);

    public LiquidInteract() {
        super("LiquidInteract", "Allows you to place blocks on water.", Class11.EXPLOIT);
    }

    private boolean Method3926(BlockPos blockPos) {
        return Globals.mc.world.getBlockState(blockPos).getBlock() == Blocks.WATER || Globals.mc.world.getBlockState(blockPos).getBlock() == Blocks.LAVA || Globals.mc.world.getBlockState(blockPos).getBlock() == Blocks.FLOWING_LAVA || Globals.mc.world.getBlockState(blockPos).getBlock() == Blocks.FLOWING_WATER;
    }

    private void Method3925(EventNetworkPostPacketEvent eventNetworkPostPacketEvent) {
        CPacketPlayerTryUseItemOnBlock cPacketPlayerTryUseItemOnBlock;
        if (eventNetworkPostPacketEvent.Method16() instanceof CPacketPlayerTryUseItemOnBlock && this.Method3926((cPacketPlayerTryUseItemOnBlock = (CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).getPos()) && Globals.mc.world.getBlockState(cPacketPlayerTryUseItemOnBlock.getPos().offset(cPacketPlayerTryUseItemOnBlock.getDirection())).getBlock() != Blocks.AIR) {
            EnumFacing enumFacing = cPacketPlayerTryUseItemOnBlock.getDirection().getOpposite();
            float f = cPacketPlayerTryUseItemOnBlock.getFacingX();
            float f2 = cPacketPlayerTryUseItemOnBlock.getFacingY();
            float f3 = cPacketPlayerTryUseItemOnBlock.getFacingZ();
            switch (enumFacing) {
                case UP: {
                    f2 = 1.0f;
                    ((CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).position = cPacketPlayerTryUseItemOnBlock.position.add(0, -1, 0);
                    break;
                }
                case DOWN: {
                    f2 = 0.0f;
                    ((CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).position = cPacketPlayerTryUseItemOnBlock.position.add(0, -1, 0);
                    break;
                }
                case NORTH: {
                    f3 = 1.0f;
                    ((CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).position = cPacketPlayerTryUseItemOnBlock.position.add(0, 0, cPacketPlayerTryUseItemOnBlock.position.getZ() > 0 ? -1 : 1);
                    break;
                }
                case SOUTH: {
                    f3 = 0.0f;
                    ((CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).position = cPacketPlayerTryUseItemOnBlock.position.add(0, 0, cPacketPlayerTryUseItemOnBlock.position.getZ() > 0 ? 1 : -1);
                    break;
                }
                case WEST: {
                    f = 0.0f;
                    ((CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).position = cPacketPlayerTryUseItemOnBlock.position.add(cPacketPlayerTryUseItemOnBlock.position.getX() > 0 ? -1 : 1, 0, 0);
                    break;
                }
                case EAST: {
                    f = 1.0f;
                    ((CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).position = cPacketPlayerTryUseItemOnBlock.position.add(cPacketPlayerTryUseItemOnBlock.position.getX() > 0 ? 1 : -1, 0, 0);
                }
            }
            ((CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).placedBlockDirection = cPacketPlayerTryUseItemOnBlock.getDirection().getOpposite();
            ((CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).facingX = f;
            ((CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).facingY = f2;
            ((CPacketPlayerTryUseItemOnBlock)eventNetworkPostPacketEvent.Method16()).facingZ = f3;
        }
    }
}
