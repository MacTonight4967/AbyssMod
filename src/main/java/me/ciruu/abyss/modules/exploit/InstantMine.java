package me.ciruu.abyss.modules.exploit;

import java.awt.Color;
import java.util.function.Predicate;
import me.ciruu.abyss.Class22;
import me.ciruu.abyss.Class25;
import me.ciruu.abyss.Class50;
import me.ciruu.abyss.Class66;
import me.ciruu.abyss.Globals;
import me.ciruu.abyss.enums.Class11;
import me.ciruu.abyss.events.network.EventNetworkPostPacketEvent;
import me.ciruu.abyss.events.player.EventPlayerDamageBlock;
import me.ciruu.abyss.events.player.EventPlayerUpdate;
import me.ciruu.abyss.modules.Module;
import me.ciruu.abyss.settings.Setting;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.block.Block;
import net.minecraft.block.state.IBlockState;
import net.minecraft.init.Items;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;

public class InstantMine
extends Module {
    private final Setting main = new Setting("Main", "", this, new Class25("Main Settings"));
    private final Setting autoBreak = new Setting("AutoBreak", "", this, true);
    private final Setting delay = new Setting("Delay", "", this, 20, 0, 500, this.main, this.autoBreak::getValue);
    private final Setting onlyPickaxe = new Setting("OnlyPickaxe", "", (Module)this, (Object)true, this.main, this.autoBreak::getValue);
    private final Setting color = new Setting("Color", "", this, new Color(255, 0, 255, 125));
    private final Setting box = new Setting("Box", "", this, true);
    private BlockPos Field2784;
    private BlockPos Field2785;
    private boolean Field2786 = false;
    private final Class22 Field2787 = new Class22();
    private EnumFacing Field2788;
    @EventHandler
    private Listener Field2789 = new Listener<Class66>(this::Method3374, new Predicate[0]);
    @EventHandler
    private Listener Field2790 = new Listener<EventPlayerUpdate>(this::Method3375, new Predicate[0]);
    @EventHandler
    private Listener Field2791 = new Listener<EventNetworkPostPacketEvent>(this::Method3376, new Predicate[0]);
    @EventHandler
    private Listener Field2792 = new Listener<EventPlayerDamageBlock>(this::Method3377, new Predicate[0]);

    public InstantMine() {
        super("InstantMine", "Mine blocks instantly.", Class11.EXPLOIT);
        this.Method3378(this.autoBreak);
        this.Method3378(this.delay);
        this.Method3378(this.onlyPickaxe);
        this.Method3378(this.color);
        this.Method3378(this.box);
    }

    public void Method3379() {
        super.Method15();
        this.Field2785 = null;
        this.Field2784 = null;
    }

    private boolean Method3380(BlockPos blockPos) {
        IBlockState iBlockState = Globals.mc.world.getBlockState(blockPos);
        Block block = iBlockState.getBlock();
        return block.getBlockHardness(iBlockState, (World)Globals.mc.world, blockPos) != -1.0f;
    }

    public BlockPos Method3381() {
        return this.Field2784;
    }

    public void Method3382(BlockPos blockPos) {
        this.Field2784 = blockPos;
        this.Field2786 = false;
        Globals.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.START_DESTROY_BLOCK, blockPos, EnumFacing.DOWN));
        this.Field2786 = true;
        Globals.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, blockPos, EnumFacing.DOWN));
        this.Field2788 = EnumFacing.DOWN;
        this.Field2785 = blockPos;
    }

    private void Method3377(EventPlayerDamageBlock eventPlayerDamageBlock) {
        if (this.Method3380(eventPlayerDamageBlock.Method2())) {
            if (this.Field2785 == null || eventPlayerDamageBlock.Method2().getX() != this.Field2785.getX() || eventPlayerDamageBlock.Method2().getY() != this.Field2785.getY() || eventPlayerDamageBlock.Method2().getZ() != this.Field2785.getZ()) {
                this.Field2786 = false;
                Globals.mc.player.swingArm(EnumHand.MAIN_HAND);
                Globals.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.START_DESTROY_BLOCK, eventPlayerDamageBlock.Method2(), eventPlayerDamageBlock.Method3()));
                this.Field2786 = true;
            } else {
                this.Field2786 = true;
            }
            Globals.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, eventPlayerDamageBlock.Method2(), eventPlayerDamageBlock.Method3()));
            this.Field2784 = eventPlayerDamageBlock.Method2();
            this.Field2785 = eventPlayerDamageBlock.Method2();
            this.Field2788 = eventPlayerDamageBlock.Method3();
            eventPlayerDamageBlock.cancel();
        }
    }

    private void Method3376(EventNetworkPostPacketEvent eventNetworkPostPacketEvent) {
        Packet packet = eventNetworkPostPacketEvent.Method16();
        if (packet instanceof CPacketPlayerDigging) {
            CPacketPlayerDigging cPacketPlayerDigging = (CPacketPlayerDigging)packet;
            if (((CPacketPlayerDigging)packet).getAction() == CPacketPlayerDigging.Action.START_DESTROY_BLOCK && this.Field2786) {
                eventNetworkPostPacketEvent.cancel();
            }
        }
    }

    private void Method3375(EventPlayerUpdate eventPlayerUpdate) {
        if (this.Field2784 != null && ((Boolean)this.autoBreak.getValue()).booleanValue() && this.Field2787.Method50(((Integer)this.delay.getValue()).intValue())) {
            if (((Boolean)this.onlyPickaxe.getValue()).booleanValue() && Globals.mc.player.getHeldItem(EnumHand.MAIN_HAND).getItem() != Items.DIAMOND_PICKAXE) {
                return;
            }
            Globals.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, this.Field2784, this.Field2788));
            this.Field2787.Method47();
        }
        try {
            Globals.mc.playerController.blockHitDelay = 0;
        }
        catch (Exception exception) {
            // empty catch block
        }
    }

    private void Method3374(Class66 class66) {
        if (this.Field2784 != null) {
            Class50.Method137(this.Field2784, (Color)this.color.getValue(), false, (Color)this.color.getValue(), 1.0f, true, (Boolean)this.box.getValue(), ((Color)this.color.getValue()).getAlpha(), false);
        }
    }
}
