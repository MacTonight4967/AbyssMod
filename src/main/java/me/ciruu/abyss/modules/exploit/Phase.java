package me.ciruu.abyss.modules.exploit;

import java.util.function.Predicate;
import me.ciruu.abyss.Globals;
import me.ciruu.abyss.enums.Class11;
import me.ciruu.abyss.enums.Class53;
import me.ciruu.abyss.events.player.EventPlayerUpdate;
import me.ciruu.abyss.modules.Module;
import me.ciruu.abyss.settings.Setting;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.math.AxisAlignedBB;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.MathHelper;

public class Phase
extends Module {
    private final Setting Field2804 = new Setting("ySpeed", "", (Module)this, (Object)Float.valueOf(0.1f), Float.valueOf(0.01f), Float.valueOf(1.0f));
    @EventHandler
    private Listener Field2805 = new Listener<EventPlayerUpdate>(this::Method3408, new Predicate[0]);

    public Phase() {
        super("Phase", "", Class11.EXPLOIT);
        this.Method3409(this.Field2804);
    }

    public void Method3410() {
        super.Method13();
        Globals.mc.player.connection.sendPacket((Packet)new CPacketPlayer.Position(Globals.mc.player.posX, Globals.mc.player.posY, Globals.mc.player.posZ, Globals.mc.player.onGround));
        Globals.mc.player.setPosition(Globals.mc.player.posX, Globals.mc.player.posY, Globals.mc.player.posZ);
        Globals.mc.player.noClip = true;
    }

    public void Method3411() {
        super.Method15();
        Globals.mc.player.noClip = false;
    }

    public void Method3412(boolean bl) {
        if (this.Method3413()) {
            this.Method3414(false);
            this.Method3411();
        }
    }

    public boolean Method2465() {
        int n = MathHelper.floor((double)Globals.mc.player.getEntityBoundingBox().minX);
        while ((double)n < (double)MathHelper.floor((double)Globals.mc.player.getEntityBoundingBox().maxX) + 1.0) {
            int n2 = MathHelper.floor((double)Globals.mc.player.getEntityBoundingBox().minY);
            while ((double)n2 < (double)MathHelper.floor((double)Globals.mc.player.getEntityBoundingBox().maxY) + 1.0) {
                int n3 = MathHelper.floor((double)Globals.mc.player.getEntityBoundingBox().minZ);
                while ((double)n3 < (double)MathHelper.floor((double)Globals.mc.player.getEntityBoundingBox().maxZ) + 1.0) {
                    if (Globals.mc.world.getBlockState(new BlockPos(n, n2, n3)).getMaterial().blocksMovement()) {
                        AxisAlignedBB axisAlignedBB = new AxisAlignedBB((double)n, (double)n2, (double)n3, (double)(n + 1), (double)(n2 + 1), (double)(n3 + 1));
                        if (Globals.mc.player.getEntityBoundingBox().intersects(axisAlignedBB)) {
                            return true;
                        }
                    }
                    ++n3;
                }
                ++n2;
            }
            ++n;
        }
        return false;
    }

    private void Method3408(EventPlayerUpdate eventPlayerUpdate) {
        if (eventPlayerUpdate.Method753() != Class53.PRE || Globals.mc.world == null || Globals.mc.player == null) {
            return;
        }
        if (this.Method2465()) {
            Globals.mc.player.noClip = true;
            Globals.mc.player.onGround = false;
            Globals.mc.player.fallDistance = 0.0f;
            double d = Globals.mc.player.movementInput.jump ? (double)((Float)this.Field2804.getValue()).floatValue() : (Globals.mc.player.motionY = (double)(Globals.mc.player.movementInput.sneak ? -((Float)this.Field2804.getValue()).floatValue() : 0.0f));
            if (Globals.mc.player.movementInput.moveStrafe == 0.0f && Globals.mc.player.movementInput.moveForward == 0.0f) {
                Globals.mc.player.motionX = 0.0;
                Globals.mc.player.motionZ = 0.0;
            }
        } else {
            Globals.mc.player.noClip = false;
        }
    }
}
