package me.ciruu.abyss.modules.exploit;

import com.mojang.realmsclient.gui.ChatFormatting;
import java.util.LinkedList;
import java.util.function.Predicate;
import me.ciruu.abyss.Globals;
import me.ciruu.abyss.enums.Class11;
import me.ciruu.abyss.events.network.EventNetworkPostPacketEvent;
import me.ciruu.abyss.modules.Module;
import me.ciruu.abyss.settings.Setting;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.entity.Entity;
import net.minecraft.entity.passive.EntityDonkey;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketConfirmTeleport;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.network.play.client.CPacketVehicleMove;
import net.minecraft.world.World;

public class Blink
extends Module {
    public final Setting entityblink = new Setting("RidingEntityBlink", "", this, true);
    private EntityOtherPlayerMP Field11;
    private EntityDonkey Field12;
    private final LinkedList Field13 = new LinkedList();
    @EventHandler
    private Listener Field14 = new Listener<EventNetworkPostPacketEvent>(this::Method5, new Predicate[0]);

    public Blink() {
        super("Blink", "Save up packets and teleport you to a certain position.", Class11.EXPLOIT);
        this.Method6(this.entityblink);
    }

    public String Method7() {
        return ChatFormatting.WHITE + String.valueOf(this.Field13.size());
    }

    public void Method8(boolean bl) {
        if (this.Method9()) {
            this.Method10(false);
            this.Method11();
        }
    }

    public void Method12() {
        super.Method13();
        if (Globals.mc.world == null) {
            this.Method14();
            return;
        }
        this.Field13.clear();
        this.Field11 = null;
        this.Field12 = null;
        this.Field11 = new EntityOtherPlayerMP((World)Globals.mc.world, Globals.mc.session.getProfile());
        this.Field11.copyLocationAndAnglesFrom((Entity)Globals.mc.player);
        this.Field11.rotationYaw = Globals.mc.player.rotationYaw;
        this.Field11.rotationYawHead = Globals.mc.player.rotationYawHead;
        this.Field11.inventory.copyInventory(Globals.mc.player.inventory);
        Globals.mc.world.addEntityToWorld(-1048575, (Entity)this.Field11);
        if (Globals.mc.player.isRiding() && Globals.mc.player.getRidingEntity() instanceof EntityDonkey) {
            EntityDonkey entityDonkey = (EntityDonkey)Globals.mc.player.getRidingEntity();
            this.Field12 = new EntityDonkey((World)Globals.mc.world);
            this.Field12.copyLocationAndAnglesFrom((Entity)entityDonkey);
            this.Field12.setChested(entityDonkey.hasChest());
            Globals.mc.world.addEntityToWorld(-1048574, (Entity)this.Field12);
            this.Field11.startRiding((Entity)this.Field12, true);
        }
    }

    public void Method11() {
        super.Method15();
        if (!this.Field13.isEmpty() && Globals.mc.world != null) {
            while (!this.Field13.isEmpty()) {
                Globals.mc.getConnection().sendPacket((Packet)this.Field13.getFirst());
                this.Field13.removeFirst();
            }
        }
        if (this.Field11 != null) {
            if (this.Field11.isRiding()) {
                this.Field11.dismountRidingEntity();
            }
            Globals.mc.world.removeEntity((Entity)this.Field11);
        }
        if (this.Field12 != null) {
            Globals.mc.world.removeEntity((Entity)this.Field12);
        }
    }

    private void Method5(EventNetworkPostPacketEvent eventNetworkPostPacketEvent) {
        if (eventNetworkPostPacketEvent.Method16() instanceof CPacketPlayer || eventNetworkPostPacketEvent.Method16() instanceof CPacketConfirmTeleport || ((Boolean)this.entityblink.getValue()).booleanValue() && eventNetworkPostPacketEvent.Method16() instanceof CPacketVehicleMove) {
            eventNetworkPostPacketEvent.cancel();
            this.Field13.add(eventNetworkPostPacketEvent.Method16());
        }
    }
}
