package me.ciruu.abyss.modules.exploit;

import java.util.Comparator;
import java.util.function.Predicate;
import me.ciruu.abyss.Class22;
import me.ciruu.abyss.Globals;
import me.ciruu.abyss.enums.Class11;
import me.ciruu.abyss.events.player.EventPlayerUpdate;
import me.ciruu.abyss.modules.Module;
import me.ciruu.abyss.settings.Setting;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.block.Block;
import net.minecraft.block.BlockChest;
import net.minecraft.client.gui.inventory.GuiScreenHorseInventory;
import net.minecraft.entity.Entity;
import net.minecraft.entity.passive.AbstractChestHorse;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Items;
import net.minecraft.inventory.ClickType;
import net.minecraft.item.ItemBlock;
import net.minecraft.item.ItemShulkerBox;
import net.minecraft.item.ItemStack;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketUseEntity;
import net.minecraft.util.EnumHand;
import net.minecraftforge.event.entity.EntityJoinWorldEvent;
import org.lwjgl.input.Keyboard;

public class AutoMountDupe
extends Module {
    public final Setting shulkeronly = new Setting("ShulkerOnly", "", this, true);
    public final Setting hitground = new Setting("HitGround", "", this, true);
    private final Setting delay = new Setting("Delay", "", (Module)this, (Object)Float.valueOf(1.0f), Float.valueOf(0.0f), Float.valueOf(10.0f));
    private boolean Field2942 = false;
    private boolean Field2943 = false;
    private boolean Field2944 = false;
    private boolean Field2945 = false;
    private boolean Field2946 = false;
    private boolean Field2947 = false;
    private int Field2948;
    private int Field2949;
    private int Field2950;
    private GuiScreenHorseInventory Field2951;
    private final Class22 Field2952 = new Class22();
    private boolean Field2953 = false;
    @EventHandler
    private final Listener Field2954 = new Listener<EventPlayerUpdate>(this::Method3638, new Predicate[0]);
    @EventHandler
    private final Listener Field2955 = new Listener<EntityJoinWorldEvent>(this::Method3639, new Predicate[0]);

    public AutoMountDupe() {
        super("AutoMountDupe", "", Class11.EXPLOIT);
        this.Method3640(this.shulkeronly);
        this.Method3640(this.hitground);
        this.Method3640(this.delay);
    }

    public void Method3641() {
        super.Method13();
        this.Field2952.Method47();
        this.Field2945 = true;
    }

    public void Method3642() {
        super.Method15();
        this.Field2953 = false;
        this.Field2942 = false;
        this.Field2943 = false;
        this.Field2944 = false;
        this.Field2945 = false;
        this.Field2946 = false;
        this.Field2947 = false;
        this.Field2948 = 0;
        this.Field2949 = 0;
        this.Field2950 = 0;
        this.Field2952.Method47();
    }

    private boolean Method3643(Entity entity) {
        if (entity instanceof AbstractChestHorse) {
            AbstractChestHorse abstractChestHorse = (AbstractChestHorse)entity;
            return !abstractChestHorse.isChild() && abstractChestHorse.isTame();
        }
        return false;
    }

    private int Method3644() {
        for (int i = 0; i < 9; ++i) {
            Block block;
            ItemStack itemStack = Globals.mc.player.inventory.getStackInSlot(i);
            if (itemStack == ItemStack.EMPTY || !(itemStack.getItem() instanceof ItemBlock) || !((block = ((ItemBlock)itemStack.getItem()).getBlock()) instanceof BlockChest)) continue;
            return i;
        }
        return -1;
    }

    private void Method3645(int n, int n2) {
        for (int i = 9; i < Globals.mc.player.inventoryContainer.inventorySlots.size() - 1; ++i) {
            ItemStack itemStack = Globals.mc.player.inventoryContainer.getSlot(i).getStack();
            if (itemStack.isEmpty() || itemStack.getItem() == Items.AIR || !(itemStack.getItem() instanceof ItemShulkerBox) && ((Boolean)this.shulkeronly.getValue()).booleanValue()) continue;
            Globals.mc.playerController.windowClick(n, i + n2, 0, ClickType.QUICK_MOVE, (EntityPlayer)Globals.mc.player);
            return;
        }
    }

    private void Method3646() {
        this.Field2953 = true;
        Entity entity = Globals.mc.world.loadedEntityList.stream().filter(this::Method3643).min(Comparator.comparing(AutoMountDupe::Method3647)).orElse(null);
        if (entity instanceof AbstractChestHorse) {
            Globals.mc.player.connection.sendPacket((Packet)new CPacketUseEntity(entity, EnumHand.MAIN_HAND, entity.getPositionVector()));
            this.Field2953 = false;
            this.Field2942 = true;
        }
    }

    private int Method3648() {
        int n = 0;
        for (int i = 9; i < Globals.mc.player.inventoryContainer.inventorySlots.size() - 1; ++i) {
            ItemStack itemStack = Globals.mc.player.inventoryContainer.getSlot(i).getStack();
            if (itemStack.isEmpty() || itemStack.getItem() == Items.AIR || !(itemStack.getItem() instanceof ItemShulkerBox) && ((Boolean)this.shulkeronly.getValue()).booleanValue()) continue;
            ++n;
        }
        if (n > this.Field2951.horseInventory.getSizeInventory() - 1) {
            n = this.Field2951.horseInventory.getSizeInventory() - 1;
        }
        return n;
    }

    private int Method3649() {
        int n = 0;
        for (int i = 2; i < this.Field2951.horseInventory.getSizeInventory() + 1; ++i) {
            ItemStack itemStack = this.Field2951.horseInventory.getStackInSlot(i);
            if (itemStack.isEmpty() || itemStack.getItem() == Items.AIR) continue;
            ++n;
        }
        return n;
    }

    private boolean Method3650() {
        for (int i = 9; i < Globals.mc.player.inventoryContainer.inventorySlots.size() - 1; ++i) {
            ItemStack itemStack = Globals.mc.player.inventoryContainer.getSlot(i).getStack();
            if (!itemStack.isEmpty() && itemStack.getItem() != Items.AIR) continue;
            return true;
        }
        return false;
    }

    public boolean Method460() {
        return this.Field2953;
    }

    private static Float Method3647(Entity entity) {
        return Float.valueOf(Globals.mc.player.getDistance(entity));
    }

    private void Method3639(EntityJoinWorldEvent entityJoinWorldEvent) {
        if (entityJoinWorldEvent.getEntity() == Globals.mc.player) {
            this.Method3651();
        }
    }

    private void Method3638(EventPlayerUpdate eventPlayerUpdate) {
        AbstractChestHorse abstractChestHorse;
        if (Keyboard.isKeyDown((int)1)) {
            this.Method3651();
            return;
        }
        if (this.Field2946) {
            this.Field2946 = false;
            this.Field2949 = 0;
            this.Field2950 = 0;
            this.Field2945 = true;
            return;
        }
        if (!this.Field2952.Method50((long)((float)((Float)this.delay.getValue()).longValue() * 100.0f))) {
            return;
        }
        this.Field2952.Method47();
        if (this.Field2944) {
            if (!Globals.mc.player.isSneaking()) {
                Globals.mc.gameSettings.keyBindSneak.pressed = true;
                return;
            }
            Globals.mc.gameSettings.keyBindSneak.pressed = false;
            this.Field2944 = false;
            if (!((Boolean)this.hitground.getValue()).booleanValue()) {
                this.Field2946 = true;
            } else {
                this.Field2947 = true;
            }
            return;
        }
        if (this.Field2947 && Globals.mc.player.onGround) {
            this.Field2947 = false;
            this.Field2946 = true;
            return;
        }
        if (this.Field2945 && this.Method3652()) {
            this.Field2948 = 0;
            this.Field2949 = 0;
            Entity entity = Globals.mc.world.loadedEntityList.stream().filter(this::Method3643).min(Comparator.comparing(AutoMountDupe::Method3653)).orElse(null);
            if (entity instanceof AbstractChestHorse) {
                abstractChestHorse = (AbstractChestHorse)entity;
                if (!abstractChestHorse.hasChest()) {
                    int n = this.Method3644();
                    if (n != -1 && Globals.mc.player.inventory.currentItem != n) {
                        Globals.mc.player.inventory.currentItem = n;
                        Globals.mc.playerController.updateController();
                        Globals.mc.playerController.interactWithEntity((EntityPlayer)Globals.mc.player, (Entity)abstractChestHorse, EnumHand.MAIN_HAND);
                    } else {
                        if (Globals.mc.player.inventory.currentItem != n) {
                            Globals.printChatMessage("No chests in hotbar, toggling...");
                            this.Method3651();
                            return;
                        }
                        Globals.mc.playerController.interactWithEntity((EntityPlayer)Globals.mc.player, (Entity)abstractChestHorse, EnumHand.MAIN_HAND);
                    }
                }
                this.Field2945 = false;
                Globals.mc.playerController.interactWithEntity((EntityPlayer)Globals.mc.player, (Entity)abstractChestHorse, EnumHand.MAIN_HAND);
                Globals.mc.player.sendHorseInventory();
                this.Field2943 = true;
            }
        }
        if (this.Field2943 && !(Globals.mc.currentScreen instanceof GuiScreenHorseInventory)) {
            this.Field2943 = false;
            this.Field2945 = true;
            return;
        }
        if (Globals.mc.currentScreen instanceof GuiScreenHorseInventory) {
            this.Field2951 = (GuiScreenHorseInventory)Globals.mc.currentScreen;
            this.Field2948 = this.Method3648();
            for (int i = 2; i < this.Field2951.horseInventory.getSizeInventory() + 1; ++i) {
                abstractChestHorse = this.Field2951.horseInventory.getStackInSlot(i);
                if ((this.Field2948 == 0 || this.Field2949 == this.Field2951.horseInventory.getSizeInventory() - 2) && this.Field2943 || this.Field2950 >= this.Field2949 && this.Field2942) break;
                if ((abstractChestHorse.isEmpty() || abstractChestHorse.getItem() == Items.AIR) && this.Field2943) {
                    this.Method3645(this.Field2951.inventorySlots.windowId, this.Field2951.horseInventory.getSizeInventory() - 9);
                    --this.Field2948;
                    this.Field2949 = this.Method3649();
                    return;
                }
                if (this.Field2943 || ((Boolean)this.shulkeronly.getValue()).booleanValue() && !(abstractChestHorse.getItem() instanceof ItemShulkerBox) || abstractChestHorse.isEmpty() || !this.Field2942) continue;
                if (this.Method3650()) {
                    Globals.mc.playerController.windowClick(Globals.mc.player.openContainer.windowId, i, 0, ClickType.QUICK_MOVE, (EntityPlayer)Globals.mc.player);
                } else {
                    Globals.mc.playerController.windowClick(this.Field2951.inventorySlots.windowId, i, -999, ClickType.THROW, (EntityPlayer)Globals.mc.player);
                }
                ++this.Field2950;
                return;
            }
            if (this.Field2943) {
                this.Field2943 = false;
                this.Method3646();
                return;
            }
            if (this.Field2942) {
                this.Field2942 = false;
                Globals.mc.player.closeScreen();
                Globals.mc.gameSettings.keyBindSneak.pressed = true;
                this.Field2944 = true;
            }
        }
    }

    private static Float Method3653(Entity entity) {
        return Float.valueOf(Globals.mc.player.getDistance(entity));
    }
}
